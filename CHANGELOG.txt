
CJAX 4.0 Stable release

May 2, 2012

+ Cjax development has been slow this year. The ajax framework has been  very stable.
	Gone through over a year of testing and usage without major bugs found. A few minor bugs were fixed and
	a few enhancements and improvements were made.

+ Automatically detends Jquery can execute commands while the requests being made with jquery, automatically. 

* Alternative integration with Codeignater has been done, no known bugs.


CJAX 3.1 RC3

February 19 2011


+ Improved security. 
	Now no longer can someone access ajax.php directly in the browser. This is done for security reasons
	and closes doors to further vulnerability.

+ New flag system was implemented
	The new flag system allows for further costumization of the already flexibly ajax system.
	The flag system allow for the usage of $ajax->setFlags(); functionality.
	This functionally also triggered the addition of new constant flags defitions.
	Usage Example:
	
	$flags = array('FLAG_WAIT'=> CJAX::FLAG_NO_WAIT, 'FLAG_ELEMENT_GETTER'=> CJAX::FLAG_ELEMENT_BY_ID);
	
	$ajax->setFlags( flags , 3);
	
	FLAG_WAIT = skips any awaiting time set with $cjax->wait();
	FLAG_ELEMENT_GETTER = tells the function that the element to be used next is to be gotten by itself class name not its id.
	We strongly recommand not replace ids for other type of property as it is not reliable. Try to set ids for all elements needed.
	
	These flags themselves are only two, but the system implemented allows for extensive usage of new flags. 
	Including furter interaction with plugins.
	
	The example above shows how to set flags for the next set of commands, the flags are already defined constant
	you can find within CJAX,  the second parameter is the number of future commands it will affect.
	If not specified, then it will set flags only for the next command without affecting the rest.

====================================
CJAX 3.1 RC2
February 18 2011



* Changed the usaged of $CJAX as official variable to $ajax - a more generic way.
	CJAX class is still instanciated by calling CJAX::getInstance(). This will not change.

+ Implemented and optimized internal timer to be able to run for long instances.
	The present internal timer was optimized and tested to run as per-need basis. This has been extended and optionmized
	to handle long periods to interpret and execute commands.
	

* New function CJAX.get.byClassName(); 
	Gets the first element which cointains a specific class, used when a element id is not available in the document.
	It is recommended to always assign id to all appropriate elements for faster, and more reliable results.

* Example Package was extended
	New example are available wihin the ajax package as some usage examples.
	+simple Alert (this is one of the simplest usages, but could give a good starting point for someone wanting to do bigger things)
	+bind_commands - shows how to bind nested command in one execute command.
	+confirm_action
	+simple value assignment
	+overlay - rather than a command, this is a full functionality.
	+messages - rather than a command, this is a full functionality.
	+upload_file - rather than a command, this is a full functionality.
	+ajax_call - example to create simple ajax calls.
	+send_input - simple example how to send input to elements
	+real_time - this is not command, this is a functionality sample.
	+parameters - shows how to send an ajax call with paramenters
	+post - post requests to the server.
	+propagate dropdowns -  rather than a command, this sample is a functionality.
	+send_form - how to submit a form using ajax.
	
	for more samples look inside the samples directory in the CJAX package.
	
=================================
Before February 2010

version 3.1 RC1

CJAX development was slow at this time but alot of new futures and bugs have been fixed at the same time has been 
tested over time to be reliable and stable.

==================================
May 29th 2010 

version 3.0 stable

+ Added the ability to display generic messages such as "error", "warining", "success" with css style sheet.

* A docen of Minor bug fixes

=================================
Late 2009

CJAX 2.6 Beta

* Testing cycle of new functionalities
* No Major problems known

=================================
2009

CJAX.2.2

Cjax development was slow this year.

* Some functionalies were optimized

* Extended the CJAX API to include Utils or "Helpers" methods to deal with generic tasks.
	
=================================
2008

CJAX.2.0

Cjax development was slow at this time but alot of new futures and bugs were  fixed. 

At this time some of the CJAX internal functions were also optimized for better reliability.

* Deprecaded the usage of $ajax->call_js();
	$ajax->call_js() is the inline printable version of $ajax->call() - which uses uses event listeners. 
	At this time all ajax calls use event listeners.



==================================
February 2007

CJAX 1.0 Released